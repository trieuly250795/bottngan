import json
import os
import random

from zlapi.models import Message, MessageStyle, MultiMsgStyle
from config import ADMIN, PREFIX

# ƒê∆∞·ªùng d·∫´n file l∆∞u tr·ªØ danh s√°ch nh√≥m b·ªã c·∫•m giao ti·∫øp v·ªõi bot
BANNED_GROUPS_FILE = "banned_groups.json"

def load_banned_groups():
    """
    T·∫£i d·ªØ li·ªáu t·ª´ file JSON ch·ª©a danh s√°ch nh√≥m b·ªã c·∫•m giao ti·∫øp v·ªõi bot.
    N·∫øu file kh√¥ng t·ªìn t·∫°i ho·∫∑c l·ªói ƒë·ªãnh d·∫°ng, tr·∫£ v·ªÅ danh s√°ch r·ªóng.
    """
    if not os.path.exists(BANNED_GROUPS_FILE):
        return []
    try:
        with open(BANNED_GROUPS_FILE, "r", encoding="utf-8") as f:
            return json.load(f)
    except Exception as e:
        print(f"L·ªói t·∫£i danh s√°ch nh√≥m b·ªã c·∫•m: {str(e)}")
        return []

def save_banned_groups(banned_groups):
    """L∆∞u danh s√°ch nh√≥m b·ªã c·∫•m v√†o file JSON v·ªõi ƒë·ªãnh d·∫°ng UTF-8."""
    with open(BANNED_GROUPS_FILE, "w", encoding="utf-8") as f:
        json.dump(banned_groups, f, ensure_ascii=False, indent=4)

def add_banned_group(group_id, group_name):
    """
    Th√™m nh√≥m v√†o danh s√°ch c·∫•m d·ª±a theo group_id v√† group_name.
    Tr·∫£ v·ªÅ True n·∫øu th√™m th√†nh c√¥ng, False n·∫øu group_id ƒë√£ t·ªìn t·∫°i.
    """
    banned_groups = load_banned_groups()
    for group in banned_groups:
        if group.get("group_id") == group_id:
            return False
    banned_groups.append({"group_id": group_id, "group_name": group_name})
    save_banned_groups(banned_groups)
    return True

def remove_banned_group(group_id):
    """
    X√≥a nh√≥m kh·ªèi danh s√°ch c·∫•m.
    Tr·∫£ v·ªÅ True n·∫øu x√≥a th√†nh c√¥ng, False n·∫øu group_id kh√¥ng t·ªìn t·∫°i.
    """
    banned_groups = load_banned_groups()
    for group in banned_groups:
        if group.get("group_id") == group_id:
            banned_groups.remove(group)
            save_banned_groups(banned_groups)
            return True
    return False

def list_banned_groups():
    """Tr·∫£ v·ªÅ danh s√°ch nh√≥m b·ªã c·∫•m giao ti·∫øp v·ªõi bot."""
    return load_banned_groups()

def send_reply_with_style(client, text, message_object, thread_id, thread_type, ttl=30000, color="#000000"):
    """
    G·ª≠i tin nh·∫Øn ph·∫£n h·ªìi v·ªõi ƒë·ªãnh d·∫°ng m√†u s·∫Øc v√† in ƒë·∫≠m.
    TTL ƒë∆∞·ª£c ƒë·∫∑t m·∫∑c ƒë·ªãnh l√† 30000.
    """
    base_length = len(text)
    adjusted_length = base_length + 355
    style = MultiMsgStyle([
        MessageStyle(
            offset=0,
            length=adjusted_length,
            style="color",
            color=color,
            auto_format=False
        ),
        MessageStyle(
            offset=0,
            length=adjusted_length,
            style="bold",
            size="8",
            auto_format=False
        )
    ])
    msg = Message(text=text, style=style)
    client.replyMessage(msg, message_object, thread_id, thread_type, ttl=ttl)

def fetch_group_info(target_input, message_object, client, command_prefix):
    """
    X√°c ƒë·ªãnh group_id t·ª´ tag ho·∫∑c tham s·ªë nh·∫≠p v√† l·∫•y th√¥ng tin nh√≥m t·ª´ API.
    Tr·∫£ v·ªÅ tuple (group_id, group_name) ho·∫∑c None n·∫øu c√≥ l·ªói.
    """
    # N·∫øu c√≥ tag nh√≥m (n·∫øu API h·ªó tr·ª£), ∆∞u ti√™n s·ª≠ d·ª•ng th√¥ng tin t·ª´ message_object.mentions
    if message_object.mentions and len(message_object.mentions) > 0:
        group_id = message_object.mentions[0]['uid']
    else:
        group_id = target_input.strip()
    if not group_id:
        return None
    try:
        group_info = client.fetchGroupInfo(group_id)
        group = group_info.gridInfoMap[group_id]
        group_name = group.name
        return group_id, group_name
    except Exception as e:
        print(f"L·ªói fetch th√¥ng tin cho group {group_id}: {e}")
        return None

def handle_addbgroup_command(message, message_object, thread_id, thread_type, author_id, client):
    """
    X·ª≠ l√Ω l·ªánh th√™m nh√≥m v√†o danh s√°ch nh√≥m b·ªã c·∫•m giao ti·∫øp v·ªõi bot.
    
    H·ªó tr·ª£:
      - addbgroup <group_id>
      - addbgroup (v·ªõi tag nh√≥m, n·∫øu ƒë∆∞·ª£c h·ªó tr·ª£)
    
    C√°ch s·ª≠ d·ª•ng:
      - V√≠ d·ª•: `{PREFIX}addbgroup 123456789` ƒë·ªÉ th√™m nh√≥m v·ªõi ID l√† 123456789.
      - Ho·∫∑c tag nh√≥m v√† g√µ l·ªánh: `{PREFIX}addbgroup` (bot s·∫Ω l·∫•y group id t·ª´ tag).
    """
    # Ki·ªÉm tra quy·ªÅn admin
    if author_id != ADMIN:
        error_msg = Message(text="‚ùå Ch·ªâ admin m·ªõi c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y.")
        client.sendMessage(error_msg, thread_id, thread_type)
        return

    command_prefix = "addbgroup"
    param = message[len(command_prefix):].strip()
    group = fetch_group_info(param, message_object, client, command_prefix)
    if group is None:
        error_msg = Message(text=f"C√∫ ph√°p: {PREFIX}addbgroup <group_id> ho·∫∑c tag nh√≥m.\nKh√¥ng th·ªÉ l·∫•y th√¥ng tin nh√≥m.")
        client.sendMessage(error_msg, thread_id, thread_type)
        return

    group_id, group_name = group

    if add_banned_group(group_id, group_name):
        reply_text = f"‚úÖ ƒê√£ th√™m nh√≥m:\nüë• {group_name}\nüÜî {group_id}\n v√†o danh s√°ch nh√≥m b·ªã c·∫•m giao ti·∫øp v·ªõi bot."
    else:
        reply_text = f"‚ö†Ô∏è Nh√≥m: {group_name}\nüÜî {group_id}\n ƒë√£ t·ªìn t·∫°i trong danh s√°ch nh√≥m b·ªã c·∫•m."
    send_reply_with_style(client, reply_text, message_object, thread_id, thread_type, ttl=30000)

def handle_delbgroup_command(message, message_object, thread_id, thread_type, author_id, client):
    """
    X·ª≠ l√Ω l·ªánh x√≥a nh√≥m kh·ªèi danh s√°ch nh√≥m b·ªã c·∫•m giao ti·∫øp v·ªõi bot.
    
    H·ªó tr·ª£:
      - delbgroup <group_id>
      - delbgroup (v·ªõi tag nh√≥m, n·∫øu ƒë∆∞·ª£c h·ªó tr·ª£)
    
    C√°ch s·ª≠ d·ª•ng:
      - V√≠ d·ª•: `{PREFIX}delbgroup 123456789` ƒë·ªÉ x√≥a nh√≥m v·ªõi ID l√† 123456789.
      - Ho·∫∑c tag nh√≥m v√† g√µ l·ªánh: `{PREFIX}delbgroup` (bot s·∫Ω l·∫•y group id t·ª´ tag).
    """
    # Ki·ªÉm tra quy·ªÅn admin
    if author_id != ADMIN:
        error_msg = Message(text="‚ùå Ch·ªâ admin m·ªõi c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y.")
        client.sendMessage(error_msg, thread_id, thread_type)
        return

    command_prefix = "delbgroup"
    param = message[len(command_prefix):].strip()
    group = fetch_group_info(param, message_object, client, command_prefix)
    if group is None:
        error_msg = Message(text=f"C√∫ ph√°p: {PREFIX}delbgroup <group_id> ho·∫∑c tag nh√≥m.\nKh√¥ng th·ªÉ l·∫•y th√¥ng tin nh√≥m.")
        client.sendMessage(error_msg, thread_id, thread_type)
        return

    group_id, group_name = group

    if remove_banned_group(group_id):
        reply_text = f"‚ùå ƒê√£ x√≥a nh√≥m:\nüë• {group_name}\nüÜî {group_id}\n kh·ªèi danh s√°ch nh√≥m b·ªã c·∫•m giao ti·∫øp v·ªõi bot."
    else:
        reply_text = f"‚ö†Ô∏è Nh√≥m v·ªõi ID: {group_id} kh√¥ng t·ªìn t·∫°i trong danh s√°ch nh√≥m b·ªã c·∫•m."
    send_reply_with_style(client, reply_text, message_object, thread_id, thread_type, ttl=30000)

def handle_listbgroup_command(message, message_object, thread_id, thread_type, author_id, client):
    """
    X·ª≠ l√Ω l·ªánh xem danh s√°ch nh√≥m b·ªã c·∫•m giao ti·∫øp v·ªõi bot.
    
    C√∫ ph√°p: listbgroup
    """
    # Ki·ªÉm tra quy·ªÅn admin
    if author_id != ADMIN:
        error_msg = Message(text="‚ùå Ch·ªâ admin m·ªõi c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y.")
        client.sendMessage(error_msg, thread_id, thread_type)
        return

    banned_groups = list_banned_groups()
    if not banned_groups:
        reply_text = "Danh s√°ch nh√≥m b·ªã c·∫•m giao ti·∫øp v·ªõi bot tr·ªëng."
    else:
        reply_text = "Danh s√°ch nh√≥m b·ªã c·∫•m giao ti·∫øp v·ªõi bot:\n" + "\n".join(
            [f"{i+1}.   {grp['group_name']}\nüÜî {grp['group_id']}" for i, grp in enumerate(banned_groups)]
        )
    send_reply_with_style(client, reply_text, message_object, thread_id, thread_type, ttl=30000)

def get_mitaizl():
    """
    Tr·∫£ v·ªÅ m·ªôt dictionary √°nh x·∫° l·ªánh t·ªõi c√°c h√†m x·ª≠ l√Ω t∆∞∆°ng ·ª©ng cho qu·∫£n l√Ω nh√≥m b·ªã c·∫•m giao ti·∫øp v·ªõi bot.
    
    C√°c l·ªánh h·ªó tr·ª£:
      - addbgroup: Th√™m nh√≥m v√†o danh s√°ch b·ªã c·∫•m (theo tag ho·∫∑c ID)
      - delbgroup: X√≥a nh√≥m kh·ªèi danh s√°ch b·ªã c·∫•m (theo tag ho·∫∑c ID)
      - listbgroup: Hi·ªÉn th·ªã danh s√°ch nh√≥m b·ªã c·∫•m giao ti·∫øp v·ªõi bot.
    """
    return {
        'addbgroup': handle_addbgroup_command,
        'delbgroup': handle_delbgroup_command,
        'listbgroup': handle_listbgroup_command
    }
