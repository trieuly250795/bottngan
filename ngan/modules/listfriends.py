from datetime import datetime
import time
from zlapi.models import *

des = {
    't√°c gi·∫£': "Rosy",
    'm√¥ t·∫£': "Bot h·ªó tr·ª£ l·∫•y danh s√°ch b·∫°n b√® c·ªßa t√†i kho·∫£n Zalo v√† g·ª≠i danh s√°ch cho ng∆∞·ªùi d√πng.",
    't√≠nh nƒÉng': [
        "üìã L·∫•y danh s√°ch b·∫°n b√® c·ªßa t√†i kho·∫£n Zalo v√† g·ª≠i danh s√°ch chi ti·∫øt.",
        "üîî Th√¥ng b√°o k·∫øt qu·∫£ l·∫•y danh s√°ch v·ªõi th·ªùi gian s·ªëng (TTL) kh√°c nhau.",
        "üîç L·∫•y th√¥ng tin chi ti·∫øt v·ªÅ b·∫°n b√® bao g·ªìm t√™n, s·ªë ƒëi·ªán tho·∫°i, gi·ªõi t√≠nh, ng√†y sinh v√† th·ªùi gian t·∫°o.",
        "üîí Ch·ªâ qu·∫£n tr·ªã vi√™n m·ªõi c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y."
    ],
    'h∆∞·ªõng d·∫´n s·ª≠ d·ª•ng': [
        "üì© G·ª≠i l·ªánh ƒë·ªÉ bot l·∫•y danh s√°ch b·∫°n b√® c·ªßa t√†i kho·∫£n Zalo.",
        "üìå Bot s·∫Ω g·ª≠i th√¥ng tin chi ti·∫øt v·ªÅ t·ª´ng ng∆∞·ªùi b·∫°n trong danh s√°ch.",
        "‚úÖ Nh·∫≠n th√¥ng b√°o tr·∫°ng th√°i l·∫•y danh s√°ch ngay l·∫≠p t·ª©c."
    ]
}

def send_message_with_style(client, text, thread_id, thread_type, color="#db342e"):
    """ G·ª≠i tin nh·∫Øn v·ªõi ƒë·ªãnh d·∫°ng m√†u s·∫Øc v√† font ch·ªØ. """
    base_length = len(text)
    adjusted_length = base_length + 355
    style = MultiMsgStyle([
        MessageStyle(
            offset=0, length=adjusted_length, style="color", color=color, auto_format=False,
        ),
        MessageStyle(
            offset=0, length=adjusted_length, style="font", size="6", auto_format=False
        )
    ])
    client.send(Message(text=text, style=style), thread_id=thread_id, thread_type=thread_type, ttl=60000)

def send_long_message(client, text, thread_id, thread_type, color="#000000", max_length=1500, delay=5):
    """ N·∫øu n·ªôi dung qu√° d√†i, chia th√†nh nhi·ªÅu ph·∫ßn v√† g·ª≠i v·ªõi th·ªùi gian tr·ªÖ gi·ªØa c√°c ph·∫ßn. """
    chunks = [text[i:i+max_length] for i in range(0, len(text), max_length)]
    for chunk in chunks:
        send_message_with_style(client, chunk, thread_id, thread_type, color)
        time.sleep(delay)

def handle_list_friends(message, message_object, thread_id, thread_type, author_id, bot):
    """ L·∫•y danh s√°ch b·∫°n b√® c·ªßa bot v√† g·ª≠i danh s√°ch cho ng∆∞·ªùi d√πng. ƒê·ªãnh d·∫°ng v√≠ d·ª•: DANH S√ÅCH B·∫†N B√à: T·ªïng s·ªë b·∫°n b√®: <s·ªë b·∫°n b√®> 1. T√™n: <t√™n b·∫°n b√®> SƒêT: <s·ªë ƒëi·ªán tho·∫°i> Gi·ªõi t√≠nh: <gi·ªõi t√≠nh> Ng√†y sinh: <dob> Th·ªùi gian t·∫°o: <createdTs> 2. ... """
    # G·ª≠i ph·∫£n ·ª©ng khi nh·∫≠n l·ªánh
    bot.sendReaction(message_object, "‚úÖ", thread_id, thread_type, reactionType=75)

    try:
        friends = bot.fetchAllFriends()
        total_friends = len(friends)
    except Exception as e:
        error_msg = f"ƒê√£ x·∫£y ra l·ªói khi l·∫•y danh s√°ch b·∫°n b√®: {e}"
        send_message_with_style(bot, error_msg, thread_id, thread_type)
        return

    msg = f"DANH S√ÅCH B·∫†N B√à:\nT·ªïng s·ªë b·∫°n b√®: {total_friends}\n\n"
    count = 1
    for friend in friends:
        # Gi·ªõi h·∫°n t√™n b·∫°n b√® n·∫øu qu√° 30 k√Ω t·ª±
        friend_name = friend.zaloName[:30] + "..." if len(friend.zaloName) > 30 else friend.zaloName
        # S·ª≠ d·ª•ng userId c·ªßa friend ƒë·ªÉ l·∫•y th√¥ng tin chi ti·∫øt
        friend_id = friend.userId
        try:
            info_response = bot.fetchUserInfo(friend_id)
            # ∆Øu ti√™n l·∫•y th√¥ng tin t·ª´ unchanged_profiles, n·∫øu kh√¥ng c√≥ th√¨ d√πng changed_profiles
            profiles = info_response.unchanged_profiles or info_response.changed_profiles
            info = profiles.get(str(friend_id))
        except Exception as e:
            # N·∫øu kh√¥ng l·∫•y ƒë∆∞·ª£c th√¥ng tin chi ti·∫øt, b·ªè qua ng∆∞·ªùi b·∫°n n√†y
            continue

        phone = info.phoneNumber if info.phoneNumber else "·∫®n"
        if friend_id == bot.uid:
            phone = "·∫®n"
        created_ts = info.createdTs
        if isinstance(created_ts, int):
            created_ts_formatted = datetime.fromtimestamp(created_ts).strftime("%H:%M %d/%m/%Y")
        else:
            created_ts_formatted = str(created_ts)
        gender = "Nam" if info.gender == 0 else "N·ªØ" if info.gender == 1 else "Kh√¥ng x√°c ƒë·ªãnh"
        dob = info.sdob if hasattr(info, "sdob") and info.sdob else "Ch∆∞a c·∫≠p nh·∫≠t"

        msg += (
            f"{count}. T√™n: {friend_name}\n"
            f" SƒêT: {phone}\n"
            f" Gi·ªõi t√≠nh: {gender}\n"
            f" Ng√†y sinh: {dob}\n"
            f" Th·ªùi gian t·∫°o: {created_ts_formatted}\n\n"
        )
        count += 1

    send_long_message(bot, msg, thread_id, thread_type, color="#000000", max_length=1500, delay=5)

def get_mitaizl():
    """ Tr·∫£ v·ªÅ mapping c√°c l·ªánh c·ªßa bot. """
    return {
        'listfriends': handle_list_friends
    }
